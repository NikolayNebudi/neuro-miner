#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
"""

import sys
import os
sys.path.append(os.path.dirname(__file__))

from network_echo_env_improved import NetworkEchoEnvImproved

def test_improved_env():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"""
    print("üß™ –¢–ï–°–¢ –£–õ–£–ß–®–ï–ù–ù–û–ì–û –û–ö–†–£–ñ–ï–ù–ò–Ø")
    print("=" * 40)
    
    try:
        # –°–æ–∑–¥–∞–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
        env = NetworkEchoEnvImproved(
            config={
                'reduce_randomness': True,
                'enemy_spawn_rate': 0.1,
                'resource_spawn_rate': 0.2
            },
            log_actions=True,
            max_log_entries=100
        )
        
        print("‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º reset
        print("üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º reset...")
        obs, info = env.reset()
        print(f"‚úÖ Reset –≤—ã–ø–æ–ª–Ω–µ–Ω. –†–∞–∑–º–µ—Ä –Ω–∞–±–ª—é–¥–µ–Ω–∏—è: {obs.shape}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —à–∞–≥–æ–≤
        print("üéÆ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —à–∞–≥–æ–≤...")
        for i in range(5):
            action = env.action_space.sample()
            obs, reward, done, truncated, info = env.step(action)
            print(f"–®–∞–≥ {i+1}: –¥–µ–π—Å—Ç–≤–∏–µ={action}, –Ω–∞–≥—Ä–∞–¥–∞={reward:.2f}, done={done}")
            
            if done:
                print("‚úÖ –≠–ø–∏–∑–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω")
                break
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
        env.close()
        print("‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ")
        
        print("\nüéâ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_improved_env() 